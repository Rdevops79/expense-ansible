- name: backend playbook
  hosts: all
  become: true
  tasks:
    - name: set prompt
      ansible.builtin.shell: set-prompt backend

    - name: Disable NodeJS default version
      ansible.builtin.shell: dnf module disable nodejs -y

    - name: enable NodeJS 20 version
      ansible.builtin.shell: dnf module enable nodejs:20 -y

    - name: install NodeJS
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: Add Expense User
      ansible.builtin.user:
        name: expense

    - name: Copy Backend Service File
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: Delete Existing Application Directory
      ansible.builtin.file:
        name: /app
        state: absent

    - name: Create Application Directory
      ansible.builtin.file:
        name: /app
        state: directory

    - name: Download and Extract Backend code
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip
        dest: /app
        remote_src: true

    - name: Download NodeJs App Dependencies
      community.general.npm:
        path: /app

    - name: Install MySQL Client & MySql Python Module
      ansible.builtin.dnf:
        name:
          - mysql
          - python3-PyMySQL
        state: present

    - name: Load Schema
      community.mysql.mysql_db:
        state: import
        name: all
        target: /app/schema/backend.sql
        login_user: root
        login_password: ExpenseApp@1
        login_host: 172.31.41.63

    - name: Start Backend Service
      ansible.builtin.systemd_service:
        name: backend
        state: restarted
        enable: true
        demon_reload: true

    -




##source common.sh
#rm -f /tmp/expense.log
#
#if [ -z "$1" ]; then
#  echo "INput MySQL Password is Missing"
#  exit 1
#fi
#
#HEADING "Disable NodeJS default version"
#dnf module disable nodejs -y &>>/tmp/expense.log
#STAT $?
#
#HEADING "Enable NodeJS 20"
#dnf module enable nodejs:20 -y &>>/tmp/expense.log
#STAT $?
#
#HEADING "Install NodeJS"
#dnf install nodejs -y &>>/tmp/expense.log
#STAT $?
#
#HEADING "Add Expense User"
#id expense &>>/tmp/expense.log
#if [ $? -ne 0 ]; then
#  useradd expense &>>/tmp/expense.log
#fi
#STAT $?
#
#HEADING "Setup Backend Service"
#cp backend.service /etc/systemd/system/backend.service &>>/tmp/expense.log
#STAT $?
#
#HEADING "Delete Existing Application Directory"
#rm -rf /app
#STAT $?
#
#HEADING "Create Application Directory"
#mkdir /app &>>/tmp/expense.log
#STAT $?
#
#HEADING "Download Backend Code"
#curl -o /tmp/backend.zip https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip &>>/tmp/expense.log
#STAT $?
#
#cd /app
#
#HEADING "Extract Backend code"
#unzip /tmp/backend.zip &>>/tmp/expense.log
#STAT $?
#
#HEADING "Download NodeJS App Dependencies"
#npm install &>>/tmp/expense.log
#STAT $?
#
#HEADING "Install MySQL Client"
#dnf install mysql -y &>>/tmp/expense.log
#STAT $?
#
#HEADING "Load Schema"
#mysql -h 172.31.21.55 -uroot -p$1 <    &>>/tmp/expense.log
#STAT $?
#
#HEADING "Start Backend Service"
#systemctl daemon-reload
#systemctl enable backend
#systemctl restart backend
#STAT $?